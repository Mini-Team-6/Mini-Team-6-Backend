name: CI - test

on:
  push:
    branches: [ "main", "develop", "feature/#4-test-ci"]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    name: Build and test project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'



      - name: Grant execute permission for gradlew
        run:
          java -Dspring.profiles.active=test
          chmod +x ./gradlew
#      - name: Set secret yaml
#        env:
#          SECRET_YAML: ${{ secrets.SECRET_YAML }}
#        run: echo $SECRET_YAML | base64 --decode > src/main/resources/application-test.yaml &&
#          echo $SECRET_YAML | base64 --decode > src/test/resources/application-test.yaml
#          java -Dspring.profiles.active=test

      # 빌드 진행
      - name: Test with Gradle
        run: ./gradlew build

#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@v2.6.0
#        with:
#          arguments: build
#          cache-read-only: ${{ github.ref != 'ref/heads/main' && github.ref != 'ref/heads/develop' }}

      - name: Publish result of unit test
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "**/build/test-results/test/TEST-*.xml"
#          github_token: ${{ github.token }}

      - name: Publish failure of unit test
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
#          github_token: ${{ github.token }}